//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public  class JOB_PORTAL_DBEntities : DbContext
    {
        //partial
       //public JOB_PORTAL_DBEntities(bool createProxy = true)
       //   : base("name=JOB_PORTAL_DBEntities")
       //{
       //    Configuration.ProxyCreationEnabled = createProxy;
       //}
       public JOB_PORTAL_DBEntities()
            : base("name=JOB_PORTAL_DBEntities")
       {
       }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Applicant_Profiles>().HasMany(e => e.Applicant_Educations).WithRequired(e => e.Applicant_Profiles)
           .HasForeignKey(e => e.Applicant).WillCascadeOnDelete(false);
            modelBuilder.Entity<Applicant_Profiles>().HasMany(e => e.Applicant_Job_Applications).WithRequired(e => e.Applicant_Profiles)
           .HasForeignKey(e => e.Applicant).WillCascadeOnDelete(false);
            modelBuilder.Entity<Applicant_Profiles>().HasMany(e => e.Applicant_Work_History).WithRequired(e => e.Applicant_Profiles)
           .HasForeignKey(e => e.Applicant).WillCascadeOnDelete(false);
            modelBuilder.Entity<Applicant_Profiles>().HasMany(e => e.Applicant_Skills).WithRequired(e => e.Applicant_Profiles)
           .HasForeignKey(e => e.Applicant).WillCascadeOnDelete(false);
            modelBuilder.Entity<Applicant_Profiles>().HasMany(e => e.Applicant_Resumes).WithRequired(e => e.Applicant_Profiles)
           .HasForeignKey(e => e.Applicant).WillCascadeOnDelete(false);

            // //CompanyJobPoco
            modelBuilder.Entity<Company_Jobs>().HasMany(e => e.Applicant_Job_Applications).WithRequired(e => e.Company_Jobs)
           .HasForeignKey(e => e.Job).WillCascadeOnDelete(false);
            modelBuilder.Entity<Company_Jobs>().HasMany(e => e.Company_Jobs_Descriptions).WithRequired(e => e.Company_Jobs)
           .HasForeignKey(e => e.Job).WillCascadeOnDelete(false);
            modelBuilder.Entity<Company_Jobs>().HasMany(e => e.Company_Job_Educations).WithRequired(e => e.Company_Jobs)
           .HasForeignKey(e => e.Job).WillCascadeOnDelete(false);
            modelBuilder.Entity<Company_Jobs>().HasMany(e => e.Company_Job_Skills).WithRequired(e => e.Company_Jobs)
           .HasForeignKey(e => e.Job).WillCascadeOnDelete(false);

            // //CompanyProfilePoco
            modelBuilder.Entity<Company_Profiles>().HasMany(e => e.Company_Descriptions).WithRequired(e => e.Company_Profiles)
           .HasForeignKey(e => e.Company).WillCascadeOnDelete(false);
            modelBuilder.Entity<Company_Profiles>().HasMany(e => e.Company_Jobs).WithRequired(e => e.Company_Profiles)
           .HasForeignKey(e => e.Company).WillCascadeOnDelete(false);
            modelBuilder.Entity<Company_Profiles>().HasMany(e => e.Company_Locations).WithRequired(e => e.Company_Profiles)
           .HasForeignKey(e => e.Company).WillCascadeOnDelete(false);


            // //SecurityLoginsPoco
            modelBuilder.Entity<Security_Logins>().HasMany(e => e.Security_Logins_Roles).WithRequired(e => e.Security_Logins)
           .HasForeignKey(e => e.Login).WillCascadeOnDelete(false);
            modelBuilder.Entity<Security_Logins>().HasMany(e => e.Security_Logins_Log).WithRequired(e => e.Security_Logins)
           .HasForeignKey(e => e.Login).WillCascadeOnDelete(false);
            modelBuilder.Entity<Security_Logins>().HasMany(e => e.Applicant_Profiles).WithRequired(e => e.Security_Logins)
           .HasForeignKey(e => e.Login).WillCascadeOnDelete(false);

            // //SystemCountryCodePoco
            modelBuilder.Entity<System_Country_Codes>().HasMany(e => e.Applicant_Profiles).WithRequired(e => e.System_Country_Codes)
           .HasForeignKey(e => e.Country_Code).WillCascadeOnDelete(false);
            modelBuilder.Entity<System_Country_Codes>().HasKey(d => d.Code);

            // //SystemLanguageCodePoco
            modelBuilder.Entity<System_Language_Codes>().HasMany(e => e.Company_Descriptions).WithRequired(e => e.System_Language_Codes)
           .HasForeignKey(e => e.LanguageID).WillCascadeOnDelete(false);
            modelBuilder.Entity<System_Language_Codes>().HasKey(d => d.LanguageID);

            // //SecurityRolePoco
            modelBuilder.Entity<Security_Roles>().HasMany(e => e.Security_Logins_Roles).WithRequired(e => e.Security_Roles)
           .HasForeignKey(e => e.Role).WillCascadeOnDelete(false);

            // //Ignore of Time_Stamp field
            modelBuilder.Entity<Applicant_Educations>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Applicant_Job_Applications>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Applicant_Profiles>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Applicant_Skills>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Applicant_Work_History>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Company_Descriptions>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Company_Job_Educations>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Company_Job_Skills>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Company_Jobs>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Company_Jobs_Descriptions>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Company_Locations>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Security_Logins>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Company_Profiles>().Ignore(t => t.Time_Stamp);
            modelBuilder.Entity<Security_Logins_Roles>().Ignore(t => t.Time_Stamp);


            base.OnModelCreating(modelBuilder);


        }
        //protected override void OnModelCreating(DbModelBuilder modelBuilder)
        //{
        //    throw new UnintentionalCodeFirstException();
        //}

        public virtual DbSet<Applicant_Educations> Applicant_Educations { get; set; }
        public virtual DbSet<Applicant_Job_Applications> Applicant_Job_Applications { get; set; }
        public virtual DbSet<Applicant_Profiles> Applicant_Profiles { get; set; }
        public virtual DbSet<Applicant_Resumes> Applicant_Resumes { get; set; }
        public virtual DbSet<Applicant_Skills> Applicant_Skills { get; set; }
        public virtual DbSet<Applicant_Work_History> Applicant_Work_History { get; set; }
        public virtual DbSet<Company_Descriptions> Company_Descriptions { get; set; }
        public virtual DbSet<Company_Job_Educations> Company_Job_Educations { get; set; }
        public virtual DbSet<Company_Job_Skills> Company_Job_Skills { get; set; }
        public virtual DbSet<Company_Jobs> Company_Jobs { get; set; }
        public virtual DbSet<Company_Jobs_Descriptions> Company_Jobs_Descriptions { get; set; }
        public virtual DbSet<Company_Locations> Company_Locations { get; set; }
        public virtual DbSet<Company_Profiles> Company_Profiles { get; set; }
        public virtual DbSet<Security_Logins> Security_Logins { get; set; }
        public virtual DbSet<Security_Logins_Log> Security_Logins_Log { get; set; }
        public virtual DbSet<Security_Logins_Roles> Security_Logins_Roles { get; set; }
        public virtual DbSet<Security_Roles> Security_Roles { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<System_Country_Codes> System_Country_Codes { get; set; }
        public virtual DbSet<System_Language_Codes> System_Language_Codes { get; set; }
    }
}
